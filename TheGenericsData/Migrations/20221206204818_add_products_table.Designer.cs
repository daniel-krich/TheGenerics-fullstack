// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheGenericsData.Context;

#nullable disable

namespace TheGenericsData.Migrations
{
    [DbContext(typeof(GenericsDbContext))]
    [Migration("20221206204818_add_products_table")]
    partial class add_products_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TheGenericsData.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            ImageLink = "https://i.scdn.co/image/ab67616d00001e0288ab3299f404a55abea86bc9",
                            Name = "Album 1",
                            Price = 13.99f
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            ImageLink = "https://e.snmc.io/i/300/s/74b739c5972c2a02ca25e930ff11a354/2086821",
                            Name = "Album 2",
                            Price = 13.99f
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            ImageLink = "https://upload.wikimedia.org/wikipedia/en/3/30/Genericflipper.jpg",
                            Name = "Album 3",
                            Price = 13.99f
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            ImageLink = "https://i.pinimg.com/originals/34/fa/1c/34fa1c26ec5fb251de8231777b9befe2.jpg",
                            Name = "Album 4",
                            Price = 13.99f
                        },
                        new
                        {
                            Id = 5,
                            Category = 1,
                            ImageLink = "https://ih1.redbubble.net/image.3807536613.9740/ssrco,slim_fit_t_shirt,flatlay,101010:01c5ca27c6,front,wide_portrait,750x1000-bg,f8f8f8.jpg",
                            Name = "The Generics Shirt",
                            Price = 19.99f
                        },
                        new
                        {
                            Id = 6,
                            Category = 1,
                            ImageLink = "https://www.xonot.com/wp-content/uploads/2019/12/mockup-032717b1.jpg",
                            Name = "The Generics Coffee mug",
                            Price = 24.99f
                        });
                });

            modelBuilder.Entity("TheGenericsData.Entities.TourEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TourArena")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("TourDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TourLocation")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TourArena = "BARCLAYS CENTER",
                            TourDate = new DateTime(2022, 11, 25, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "NYC, NY"
                        },
                        new
                        {
                            Id = 2,
                            TourArena = "DTE ENERGY MUSIC THEATRE",
                            TourDate = new DateTime(2022, 11, 30, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "DETROIT, MI"
                        },
                        new
                        {
                            Id = 3,
                            TourArena = "BUDWEISER STAGE",
                            TourDate = new DateTime(2023, 1, 5, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "TORONTO, ON"
                        },
                        new
                        {
                            Id = 4,
                            TourArena = "JIGGY LUBE LIVE",
                            TourDate = new DateTime(2023, 1, 10, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "BRISTOW, VA"
                        },
                        new
                        {
                            Id = 5,
                            TourArena = "AK-CHIN PAVILION",
                            TourDate = new DateTime(2023, 1, 15, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "PHOENIX, AZ"
                        },
                        new
                        {
                            Id = 6,
                            TourArena = "T-MOBILE ARENA",
                            TourDate = new DateTime(2023, 1, 25, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "LAS VEGAS, NV"
                        },
                        new
                        {
                            Id = 7,
                            TourArena = "CONCORD PAVILION",
                            TourDate = new DateTime(2022, 10, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TourLocation = "CONCORD, CA"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
